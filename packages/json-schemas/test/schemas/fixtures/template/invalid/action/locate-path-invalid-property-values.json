{
  "schema": "template/action/locate-path.json",
  "allErrors": true,
  "input": {
    "name": "",
    "path": "",
    "limit": -1,
    "depth": -1,
    "matcher": {
      "type": "",
      "matchers": [
        {
          "pattern": "",
          "extra": true
        },
        {
          "type": "",
          "matchers": [
            {
              "pattern": "",
              "extra": true
            }
          ],
          "extra": true
        }
      ],
      "extra": true
    },
    "result": "",
    "extra": true
  },
  "errors": [
    {
      "instancePath": "",
      "keyword": "additionalProperties",
      "message": "must NOT have additional properties",
      "params": {
        "additionalProperty": "extra"
      },
      "schemaPath": "#/additionalProperties"
    },
    {
      "instancePath": "/name",
      "keyword": "const",
      "message": "must be equal to constant",
      "params": {
        "allowedValue": "locate-path"
      },
      "schemaPath": "#/properties/name/const"
    },
    {
      "instancePath": "/path",
      "keyword": "minLength",
      "message": "must NOT have fewer than 1 characters",
      "params": {
        "limit": 1
      },
      "schemaPath": "#/properties/path/minLength"
    },
    {
      "instancePath": "/matcher",
      "keyword": "required",
      "message": "must have required property 'pattern'",
      "params": {
        "missingProperty": "pattern"
      },
      "schemaPath": "#/oneOf/0/required"
    },
    {
      "instancePath": "/matcher",
      "keyword": "additionalProperties",
      "message": "must NOT have additional properties",
      "params": {
        "additionalProperty": "type"
      },
      "schemaPath": "#/oneOf/0/additionalProperties"
    },
    {
      "instancePath": "/matcher/type",
      "keyword": "enum",
      "message": "must be equal to one of the allowed values",
      "params": {
        "allowedValues": [
          "and",
          "or"
        ]
      },
      "schemaPath": "#/oneOf/1/properties/type/enum"
    },
    {
      "instancePath": "/matcher/matchers/0",
      "keyword": "additionalProperties",
      "message": "must NOT have additional properties",
      "params": {
        "additionalProperty": "extra"
      },
      "schemaPath": "#/oneOf/0/additionalProperties"
    },
    {
      "instancePath": "/matcher/matchers/0/pattern",
      "keyword": "minLength",
      "message": "must NOT have fewer than 1 characters",
      "params": {
        "limit": 1
      },
      "schemaPath": "#/oneOf/0/properties/pattern/minLength"
    },
    {
      "instancePath": "/matcher/matchers/0",
      "keyword": "required",
      "message": "must have required property 'type'",
      "params": {
        "missingProperty": "type"
      },
      "schemaPath": "#/oneOf/1/required"
    },
    {
      "instancePath": "/matcher/matchers/0",
      "keyword": "required",
      "message": "must have required property 'matchers'",
      "params": {
        "missingProperty": "matchers"
      },
      "schemaPath": "#/oneOf/1/required"
    },
    {
      "instancePath": "/matcher/matchers/0",
      "keyword": "oneOf",
      "message": "must match exactly one schema in oneOf",
      "params": {
        "passingSchemas": null
      },
      "schemaPath": "#/oneOf"
    },
    {
      "instancePath": "/matcher/matchers/1",
      "keyword": "required",
      "message": "must have required property 'pattern'",
      "params": {
        "missingProperty": "pattern"
      },
      "schemaPath": "#/oneOf/0/required"
    },
    {
      "instancePath": "/matcher/matchers/1",
      "keyword": "additionalProperties",
      "message": "must NOT have additional properties",
      "params": {
        "additionalProperty": "type"
      },
      "schemaPath": "#/oneOf/0/additionalProperties"
    },
    {
      "instancePath": "/matcher/matchers/1/type",
      "keyword": "enum",
      "message": "must be equal to one of the allowed values",
      "params": {
        "allowedValues": [
          "and",
          "or"
        ]
      },
      "schemaPath": "#/oneOf/1/properties/type/enum"
    },
    {
      "instancePath": "/matcher/matchers/1/matchers/0",
      "keyword": "additionalProperties",
      "message": "must NOT have additional properties",
      "params": {
        "additionalProperty": "extra"
      },
      "schemaPath": "#/oneOf/0/additionalProperties"
    },
    {
      "instancePath": "/matcher/matchers/1/matchers/0/pattern",
      "keyword": "minLength",
      "message": "must NOT have fewer than 1 characters",
      "params": {
        "limit": 1
      },
      "schemaPath": "#/oneOf/0/properties/pattern/minLength"
    },
    {
      "instancePath": "/matcher/matchers/1/matchers/0",
      "keyword": "required",
      "message": "must have required property 'type'",
      "params": {
        "missingProperty": "type"
      },
      "schemaPath": "#/oneOf/1/required"
    },
    {
      "instancePath": "/matcher/matchers/1/matchers/0",
      "keyword": "required",
      "message": "must have required property 'matchers'",
      "params": {
        "missingProperty": "matchers"
      },
      "schemaPath": "#/oneOf/1/required"
    },
    {
      "instancePath": "/matcher/matchers/1/matchers/0",
      "keyword": "oneOf",
      "message": "must match exactly one schema in oneOf",
      "params": {
        "passingSchemas": null
      },
      "schemaPath": "#/oneOf"
    },
    {
      "instancePath": "/matcher/matchers/1",
      "keyword": "oneOf",
      "message": "must match exactly one schema in oneOf",
      "params": {
        "passingSchemas": null
      },
      "schemaPath": "#/oneOf"
    },
    {
      "instancePath": "/matcher",
      "keyword": "oneOf",
      "message": "must match exactly one schema in oneOf",
      "params": {
        "passingSchemas": null
      },
      "schemaPath": "#/oneOf"
    },
    {
      "instancePath": "/limit",
      "keyword": "minimum",
      "message": "must be >= 1",
      "params": {
        "comparison": ">=",
        "limit": 1
      },
      "schemaPath": "#/properties/limit/minimum"
    },
    {
      "instancePath": "/depth",
      "keyword": "minimum",
      "message": "must be >= 0",
      "params": {
        "comparison": ">=",
        "limit": 0
      },
      "schemaPath": "#/properties/depth/minimum"
    }
  ]
}
