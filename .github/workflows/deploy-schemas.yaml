name: Deploy schemas

on:
  workflow_dispatch:
  release:
    types:
      - published
  push:
    branches:
      - master

jobs:
  deploy-schemas:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: sourcemeta/jsonschema@v7.1.2
      - uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm -g install tsx

      - name: Build JSON schemas
        run: |-
          mkdir -p build/json-schemas
          packages/json-schemas/bin/bundle-schema.ts packages/json-schemas/schemas/event/web-event.json build/json-schemas/web-event.json
          packages/json-schemas/bin/bundle-schema.ts packages/json-schemas/schemas/template/template.json build/json-schemas/template.json
          packages/json-schemas/bin/process-template-schema.ts build/json-schemas/template.json build/json-schemas/template.json
          cp packages/json-schemas/schemas/content.json build/json-schemas/content.json
          cp packages/json-schemas/schemas/content-schema.json build/json-schemas/content-schema.json
          cp packages/json-schemas/schemas/project.json build/json-schemas/project.json
          find build/json-schemas -type f -name "*.json" -exec sed -i -e 's|https://schema\.croct\.com/json/event/|https://schema.croct.com/json/v1/|g' {} +
          find build/json-schemas -type f -name "*.json" -exec sed -i -e 's|https://schema\.croct\.com/json/template/|https://schema.croct.com/json/v1/|g' {} +
          find build/json-schemas -type f -name "*.json" -exec sed -i -e '/https:\/\/schema\.croct\.com\/json\/v1\//! s|https://schema\.croct\.com/json/|https://schema.croct.com/json/v1/|g' {} +

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy pre-release to GCS
        if: ${{ github.event.release.prerelease || !github.ref || github.ref == 'refs/heads/master' }}
        run: |-
          gsutil -m rsync -r -d build/json-schemas "gs://${GCLOUD_BUCKET}/json/next"
          gsutil -m setmeta -h "Cache-Control: public, max-age=3600" "gs://${GCLOUD_BUCKET}/json/next/**"
        env:
          GCLOUD_BUCKET: ${{ secrets.STORAGE_BUCKET_SCHEMAS }}

      - name: Deploy release to GCS
        if: ${{ github.event.release && !github.event.release.prerelease && github.ref }}
        run: |-
          MAJOR_VERSION=$(echo "${GITHUB_REF##*/}" | cut -d. -f1)
          gsutil -m rsync -r -d build/json-schemas "gs://${GCLOUD_BUCKET}/json/${MAJOR_VERSION}"
          gsutil -m setmeta -h "Cache-Control: public, max-age=3600" "gs://${GCLOUD_BUCKET}/json/${MAJOR_VERSION}/**"
        env:
          GCLOUD_BUCKET: ${{ secrets.STORAGE_BUCKET_SCHEMAS }}
